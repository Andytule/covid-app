{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9eaed8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3PU3E\",\"card\":\"Cards_card__1Ic_y\",\"infected\":\"Cards_infected__OeoRG\",\"recovered\":\"Cards_recovered__1gmkU\",\"deaths\":\"Cards_deaths__27USW\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'; \nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\nconst Cards = ( { data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\tif(!confirmed) {\n\t\treturn 'Loading ...';\n\t}\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n//Special fetched data function which is asynchronous\nexport const fetchData = async (country) => {\n\tlet changeableUrl = url;\n\n\tif(country) {\n\t\tchangeableUrl = `${url}/countries/${country}`\n\t}\n\n\ttry {\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n\t\treturn { confirmed, recovered, deaths, lastUpdate };\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}\n\nexport const fetchDailyData = async () => {\n\ttry {\n\t\tconst { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\n\n\t\treturn data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\n\t} catch (error) {\n\t\treturn error;\n\t}\n};\n\nexport const fetchCountries = async () => {\n\ttry {\n\t\tconst { data: { countries }} = await axios.get(`${url}/countries`);\n\n\t\treturn countries.map((country) => country.name);\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n\tconst [dailyData, setDailyData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetDailyData(await fetchDailyData());\n\t\t}\n\n\t\tfetchAPI();\n\t}, []);\n\n\tconst lineChart = (\n\t\tdailyData.length\n\t\t? (\n\t\t\t<Line \n\t\t\tdata={{\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\n\t\t\t\tdatasets: [{\n\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\n\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\tborderColor: '#4477B2',\n\t\t\t\t\tbackgroundColor: 'rgba(156, 236, 255, 0.5)',\n\t\t\t\t\tfill: true,\n\t\t\t\t}, {\n\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\n\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\tborderColor: '#FF6961',\n\t\t\t\t\tbackgroundColor: 'rgba(241, 141, 158, 0.5)',\n\t\t\t\t\tfill: true,\n\t\t\t\t}],\n\t\t\t}}\n\t\t/> ) : null\n\t);\n\n\n\tconst barChart = (\n\t\tconfirmed\n\t\t? (\n\t\t\t<Bar\n\t\t\t \tdata={{\n\t\t\t \t\tlabels: ['Infected', 'Recovered', 'Deaths'],\n\t\t\t \t\tdatasets: [{\n\t\t\t \t\t\tlabel: 'People',\n\t\t\t \t\t\tbackgroundColor: ['rgba(230, 215, 42, 0.5)', 'rgba(156, 236, 255, 0.5)', 'rgba(241, 141, 158, 0.5)'],\n\t\t\t \t\t\tdata: [confirmed.value, recovered.value, deaths.value]\n\t\t\t \t\t}]\n\t\t\t \t}}\n\t\t\t \toptions={{\n\t\t\t \t\tlegend: { display: false },\n\t\t\t \t\ttitle: { display: true, text:`Current state in ${country}`},\n\t\t\t \t}}\n\t\t\t/>\n\t\t) : null\n\t)\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t{country? barChart : lineChart}\n\t\t</div>\n\t)\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\n//Country picker component to fetch country with api\nconst CountryPicker = ({ handleCountryChange }) => {\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchAPI = async () => {\n\t\t\tsetFetchedCountries(await fetchCountries());\n\t\t}\n\n\t\tfetchAPI();\n\t}, [setFetchedCountries]);\n\n\treturn (\n\t\t<FormControl className={styles.FormControl}>\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n\t\t\t\t<option value=\"\">Global</option>\n\t\t\t\t{fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n\t\t\t</NativeSelect>\n\t\t</FormControl>\n\t)\n}\n\nexport default CountryPicker;","//Only class based component\nimport React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n\t//Initial state\n\tstate = {\n\t\tdata: {},\n\t\tcountry: '',\n\t}\n\n\t//Making a request to the data and setting data to the state\n\tasync componentDidMount() {\n\t\tconst fetchedData = await fetchData();\n\n\t\tthis.setState({ data: fetchedData });\n\t}\n\n\t//Get country and use the new country to set the data\n\thandleCountryChange = async (country) => {\n\t\tconst fetchedData = await fetchData(country);\n\n\t\tthis.setState({ data: fetchedData, country: country });\n\n\t}\n\n\trender() {\n\t\tconst { data, country } = this.state\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\n\t\t\t\t<Cards data={data}/>\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange}/>\n\t\t\t\t<Chart data={data} country={country}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__31Bg_\",\"image\":\"App_image__3LXkJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__Njd0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__Xv_E1\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}